version: 2

sources:
  - name: jaffle_shop
    database: snowflake_sample_data
    schema: tpch_sf1
    # usar freshness for all table
    # loaded_at_field: _etl_loaded_at
    # freshness:
    #   warn_after: {count: 12, period: hour}
    #   error_after: {count: 24, period: hour}          
    tables:
      - name: customer
        # ignore freshness for specific table
        freshness: null
        description: "customer data from raw source"
        columns:
          - name: C_CUSTKEY
            description: "Primary key for customers"
            tests:
              - not_null
              - unique

      - name: orders
        description: "orders data from raw source"
        columns:
          - name: O_ORDERKEY
            description: "Primary key for orders"
            tests:
              - unique
          - name: o_orderstatus
            description: '{{ doc("status_code") }}'
            tests:
              - accepted_values:
                  # values: ['F', 'O', 'P']
                  values:
                    - F
                    - O
                    - P

        # use freshness for specific table
        # loaded_at_field: _etl_loaded_at
        # freshness:
        #   warn_after: {count: 12, period: hour}
        #   error_after: {count: 24, period: hour}      
  - name: jaffle_shop_ref
    database: raw
    schema: jaffle_shop
    # usar freshness for all table
    # loaded_at_field: _etl_loaded_at
    # freshness:
    #   warn_after: {count: 12, period: hour}
    #   error_after: {count: 24, period: hour}          
    tables:
      - name: customers
        # ignore freshness for specific table
        freshness: null
        description: "customer data from raw source"
        columns:
          - name: id
            description: "Primary key for customers"
            tests:
              - not_null
              - unique

      - name: orders
        description: "orders data from raw source"
        columns:
          - name: id
            description: "Primary key for orders"
            tests:
              - unique
          - name: status
            description: '{{ doc("status_code") }}'
            tests:
              - accepted_values:
                  values: ['returned', 'completed', 'shipped', 'return_pending', 'placed']

        # use freshness for specific table
        # loaded_at_field: _etl_loaded_at
        # freshness:
        #   warn_after: {count: 12, period: hour}
        #   error_after: {count: 24, period: hour}                  